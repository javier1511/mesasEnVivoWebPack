/*! For license information please see sales.js.LICENSE.txt */
!function(){"use strict";var t={429:function(t,e){function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function n(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,o(n.key),n)}}function o(t){var e=function(t){if("object"!=r(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=r(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==r(e)?e:e+""}var a=function(){return t=function t(e,r,n,a,i){var c,u,l,s=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),c=this,l=function(t){if(s.activeInput){var e=t.key;isNaN(e)||(s.currentValue+=e,s.calculatorDisplay.textContent=s.currentValue),"Enter"===e&&(t.preventDefault(),s.activeInput.value=s.currentValue,s.popup.closePopup()),"Backspace"!==e&&"Delete"!==e||(s.currentValue="",s.calculatorDisplay.textContent="0"),"Escape"===e&&s.popup.closePopup()}},(u=o(u="handleKeyPress"))in c?Object.defineProperty(c,u,{value:l,enumerable:!0,configurable:!0,writable:!0}):c[u]=l,this.activeInput=null,this.calculatorDisplay=e,this.calculatorButtons=r,this.currentValue="",this.clearButton=n,this.enterButton=a,this.popup=i,this.buttonsMethod(),this.eventListeners()},(e=[{key:"setActiveInput",value:function(t){this.activeInput=t,this.currentValue=t.value||"",this.calculatorDisplay.textContent=this.currentValue||"0"}},{key:"buttonsMethod",value:function(){var t=this;this.calculatorButtons.forEach((function(e){e.addEventListener("click",(function(){if(t.activeInput){var r=e.getAttribute("data-value");r&&(t.currentValue+=r,t.calculatorDisplay.textContent=t.currentValue),"clear-btn"===e.id&&(t.currentValue="",t.calculatorDisplay.textContent="0"),"enter-btn"===e.id&&(t.activeInput.value=t.currentValue,t.popup.closePopup())}}))}))}},{key:"eventListeners",value:function(){var t=this;document.addEventListener("keydown",this.handleKeyPress),document.querySelectorAll("#cash, #card, #usd, #cashIn, #payment").forEach((function(e){e.addEventListener("click",(function(){t.setActiveInput(e),t.popup.openPopup()}))}))}}])&&n(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();e.A=a},505:function(t,e){function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function n(){n=function(){return e};var t,e={},o=Object.prototype,a=o.hasOwnProperty,i=Object.defineProperty||function(t,e,r){t[e]=r.value},c="function"==typeof Symbol?Symbol:{},u=c.iterator||"@@iterator",l=c.asyncIterator||"@@asyncIterator",s=c.toStringTag||"@@toStringTag";function f(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{f({},"")}catch(t){f=function(t,e,r){return t[e]=r}}function p(t,e,r,n){var o=e&&e.prototype instanceof b?e:b,a=Object.create(o.prototype),c=new I(n||[]);return i(a,"_invoke",{value:P(t,r,c)}),a}function h(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}e.wrap=p;var v="suspendedStart",y="suspendedYield",d="executing",m="completed",g={};function b(){}function w(){}function _(){}var k={};f(k,u,(function(){return this}));var S=Object.getPrototypeOf,x=S&&S(S(T([])));x&&x!==o&&a.call(x,u)&&(k=x);var E=_.prototype=b.prototype=Object.create(k);function L(t){["next","throw","return"].forEach((function(e){f(t,e,(function(t){return this._invoke(e,t)}))}))}function j(t,e){function n(o,i,c,u){var l=h(t[o],t,i);if("throw"!==l.type){var s=l.arg,f=s.value;return f&&"object"==r(f)&&a.call(f,"__await")?e.resolve(f.__await).then((function(t){n("next",t,c,u)}),(function(t){n("throw",t,c,u)})):e.resolve(f).then((function(t){s.value=t,c(s)}),(function(t){return n("throw",t,c,u)}))}u(l.arg)}var o;i(this,"_invoke",{value:function(t,r){function a(){return new e((function(e,o){n(t,r,e,o)}))}return o=o?o.then(a,a):a()}})}function P(e,r,n){var o=v;return function(a,i){if(o===d)throw Error("Generator is already running");if(o===m){if("throw"===a)throw i;return{value:t,done:!0}}for(n.method=a,n.arg=i;;){var c=n.delegate;if(c){var u=O(c,n);if(u){if(u===g)continue;return u}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(o===v)throw o=m,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=d;var l=h(e,r,n);if("normal"===l.type){if(o=n.done?m:y,l.arg===g)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(o=m,n.method="throw",n.arg=l.arg)}}}function O(e,r){var n=r.method,o=e.iterator[n];if(o===t)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=t,O(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),g;var a=h(o,e.iterator,r.arg);if("throw"===a.type)return r.method="throw",r.arg=a.arg,r.delegate=null,g;var i=a.arg;return i?i.done?(r[e.resultName]=i.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,g):i:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,g)}function q(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function A(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function I(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(q,this),this.reset(!0)}function T(e){if(e||""===e){var n=e[u];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function r(){for(;++o<e.length;)if(a.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=t,r.done=!0,r};return i.next=i}}throw new TypeError(r(e)+" is not iterable")}return w.prototype=_,i(E,"constructor",{value:_,configurable:!0}),i(_,"constructor",{value:w,configurable:!0}),w.displayName=f(_,s,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===w||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,_):(t.__proto__=_,f(t,s,"GeneratorFunction")),t.prototype=Object.create(E),t},e.awrap=function(t){return{__await:t}},L(j.prototype),f(j.prototype,l,(function(){return this})),e.AsyncIterator=j,e.async=function(t,r,n,o,a){void 0===a&&(a=Promise);var i=new j(p(t,r,n,o),a);return e.isGeneratorFunction(r)?i:i.next().then((function(t){return t.done?t.value:i.next()}))},L(E),f(E,s,"Generator"),f(E,u,(function(){return this})),f(E,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},e.values=T,I.prototype={constructor:I,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(A),!e)for(var r in this)"t"===r.charAt(0)&&a.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function n(n,o){return c.type="throw",c.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var o=this.tryEntries.length-1;o>=0;--o){var i=this.tryEntries[o],c=i.completion;if("root"===i.tryLoc)return n("end");if(i.tryLoc<=this.prev){var u=a.call(i,"catchLoc"),l=a.call(i,"finallyLoc");if(u&&l){if(this.prev<i.catchLoc)return n(i.catchLoc,!0);if(this.prev<i.finallyLoc)return n(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return n(i.catchLoc,!0)}else{if(!l)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return n(i.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var n=this.tryEntries[r];if(n.tryLoc<=this.prev&&a.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<=o.finallyLoc&&(o=null);var i=o?o.completion:{};return i.type=t,i.arg=e,o?(this.method="next",this.next=o.finallyLoc,g):this.complete(i)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),g},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),A(r),g}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var o=n.arg;A(r)}return o}}throw Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:T(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),g}},e}function o(t,e,r,n,o,a,i){try{var c=t[a](i),u=c.value}catch(t){return void r(t)}c.done?e(u):Promise.resolve(u).then(n,o)}function a(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,i(n.key),n)}}function i(t){var e=function(t){if("object"!=r(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=r(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==r(e)?e:e+""}var c=function(){return t=function t(e,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.url=e,this.token=r},e=[{key:"get",value:(r=n().mark((function t(){var e,r,o,a;return n().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(t.prev=0,e=localStorage.getItem("token"),console.log(e),this.token){t.next=5;break}throw new Error("Token no proporcionado");case 5:return t.next=7,fetch(this.url,{headers:{"x-access-token":this.token,"Content-Type":"application/json"}});case 7:if((r=t.sent).ok){t.next=13;break}return t.next=11,r.json();case 11:throw o=t.sent,new Error(o.message||"Error en la solicitud");case 13:return t.next=15,r.json();case 15:return a=t.sent,t.abrupt("return",a);case 19:return t.prev=19,t.t0=t.catch(0),console.error("Hubo un problema con la solicitud fetch:",t.t0.message),alert("Error: "+t.t0.message),t.abrupt("return",[]);case 24:case"end":return t.stop()}}),t,this,[[0,19]])})),i=function(){var t=this,e=arguments;return new Promise((function(n,a){var i=r.apply(t,e);function c(t){o(i,n,a,c,u,"next",t)}function u(t){o(i,n,a,c,u,"throw",t)}c(void 0)}))},function(){return i.apply(this,arguments)})}],e&&a(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e,r,i}();e.A=c},575:function(t,e,r){function n(t){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},n(t)}function o(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,a(n.key),n)}}function a(t){var e=function(t){if("object"!=n(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var r=e.call(t,"string");if("object"!=n(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==n(e)?e:e+""}var i=function(){return t=function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.isAuthenticated=this.checkAuth()},(e=[{key:"logout",value:function(){this.isAuthenticated=!1,localStorage.removeItem("token"),window.location.href="http://127.0.0.1:5501/frontEnd/login.html"}},{key:"checkAuth",value:function(){return null!==localStorage.getItem("token")}},{key:"protectedRoute",value:function(){this.isAuthenticated||(window.location.href="http://127.0.0.1:5501/frontEnd/login.html",alert("Inicia sesion"))}}])&&o(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();e.A=i},579:function(t,e){function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function n(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,o(n.key),n)}}function o(t){var e=function(t){if("object"!=r(t)||!t)return t;var e=t[Symbol.toPrimitive];if(void 0!==e){var n=e.call(t,"string");if("object"!=r(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==r(e)?e:e+""}var a=function(){return t=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.selector=e,this.overlay=document.createElement("div"),this.overlay.classList.add("overlay"),document.body.appendChild(this.overlay)},(e=[{key:"openPopup",value:function(){this.overlay.classList.add("active"),this.selector.classList.add("popup__opened")}},{key:"closePopup",value:function(){this.selector.classList.remove("popup__opened"),this.overlay.classList.remove("active")}}])&&n(t.prototype,e),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,e}();e.A=a}},e={};function r(n){var o=e[n];if(void 0!==o)return o.exports;var a=e[n]={exports:{}};return t[n](a,a.exports,r),a.exports}r.d=function(t,e){for(var n in e)r.o(e,n)&&!r.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)};var n=r(575),o=r(505),a=r(579),i=r(429);function c(t){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},c(t)}function u(){u=function(){return e};var t,e={},r=Object.prototype,n=r.hasOwnProperty,o=Object.defineProperty||function(t,e,r){t[e]=r.value},a="function"==typeof Symbol?Symbol:{},i=a.iterator||"@@iterator",l=a.asyncIterator||"@@asyncIterator",s=a.toStringTag||"@@toStringTag";function f(t,e,r){return Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{f({},"")}catch(t){f=function(t,e,r){return t[e]=r}}function p(t,e,r,n){var a=e&&e.prototype instanceof b?e:b,i=Object.create(a.prototype),c=new I(n||[]);return o(i,"_invoke",{value:P(t,r,c)}),i}function h(t,e,r){try{return{type:"normal",arg:t.call(e,r)}}catch(t){return{type:"throw",arg:t}}}e.wrap=p;var v="suspendedStart",y="suspendedYield",d="executing",m="completed",g={};function b(){}function w(){}function _(){}var k={};f(k,i,(function(){return this}));var S=Object.getPrototypeOf,x=S&&S(S(T([])));x&&x!==r&&n.call(x,i)&&(k=x);var E=_.prototype=b.prototype=Object.create(k);function L(t){["next","throw","return"].forEach((function(e){f(t,e,(function(t){return this._invoke(e,t)}))}))}function j(t,e){function r(o,a,i,u){var l=h(t[o],t,a);if("throw"!==l.type){var s=l.arg,f=s.value;return f&&"object"==c(f)&&n.call(f,"__await")?e.resolve(f.__await).then((function(t){r("next",t,i,u)}),(function(t){r("throw",t,i,u)})):e.resolve(f).then((function(t){s.value=t,i(s)}),(function(t){return r("throw",t,i,u)}))}u(l.arg)}var a;o(this,"_invoke",{value:function(t,n){function o(){return new e((function(e,o){r(t,n,e,o)}))}return a=a?a.then(o,o):o()}})}function P(e,r,n){var o=v;return function(a,i){if(o===d)throw Error("Generator is already running");if(o===m){if("throw"===a)throw i;return{value:t,done:!0}}for(n.method=a,n.arg=i;;){var c=n.delegate;if(c){var u=O(c,n);if(u){if(u===g)continue;return u}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(o===v)throw o=m,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);o=d;var l=h(e,r,n);if("normal"===l.type){if(o=n.done?m:y,l.arg===g)continue;return{value:l.arg,done:n.done}}"throw"===l.type&&(o=m,n.method="throw",n.arg=l.arg)}}}function O(e,r){var n=r.method,o=e.iterator[n];if(o===t)return r.delegate=null,"throw"===n&&e.iterator.return&&(r.method="return",r.arg=t,O(e,r),"throw"===r.method)||"return"!==n&&(r.method="throw",r.arg=new TypeError("The iterator does not provide a '"+n+"' method")),g;var a=h(o,e.iterator,r.arg);if("throw"===a.type)return r.method="throw",r.arg=a.arg,r.delegate=null,g;var i=a.arg;return i?i.done?(r[e.resultName]=i.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,g):i:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,g)}function q(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function A(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function I(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(q,this),this.reset(!0)}function T(e){if(e||""===e){var r=e[i];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,a=function r(){for(;++o<e.length;)if(n.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=t,r.done=!0,r};return a.next=a}}throw new TypeError(c(e)+" is not iterable")}return w.prototype=_,o(E,"constructor",{value:_,configurable:!0}),o(_,"constructor",{value:w,configurable:!0}),w.displayName=f(_,s,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===w||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,_):(t.__proto__=_,f(t,s,"GeneratorFunction")),t.prototype=Object.create(E),t},e.awrap=function(t){return{__await:t}},L(j.prototype),f(j.prototype,l,(function(){return this})),e.AsyncIterator=j,e.async=function(t,r,n,o,a){void 0===a&&(a=Promise);var i=new j(p(t,r,n,o),a);return e.isGeneratorFunction(r)?i:i.next().then((function(t){return t.done?t.value:i.next()}))},L(E),f(E,s,"Generator"),f(E,i,(function(){return this})),f(E,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),r=[];for(var n in e)r.push(n);return r.reverse(),function t(){for(;r.length;){var n=r.pop();if(n in e)return t.value=n,t.done=!1,t}return t.done=!0,t}},e.values=T,I.prototype={constructor:I,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(A),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function o(n,o){return c.type="throw",c.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var a=this.tryEntries.length-1;a>=0;--a){var i=this.tryEntries[a],c=i.completion;if("root"===i.tryLoc)return o("end");if(i.tryLoc<=this.prev){var u=n.call(i,"catchLoc"),l=n.call(i,"finallyLoc");if(u&&l){if(this.prev<i.catchLoc)return o(i.catchLoc,!0);if(this.prev<i.finallyLoc)return o(i.finallyLoc)}else if(u){if(this.prev<i.catchLoc)return o(i.catchLoc,!0)}else{if(!l)throw Error("try statement without catch or finally");if(this.prev<i.finallyLoc)return o(i.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var a=o;break}}a&&("break"===t||"continue"===t)&&a.tryLoc<=e&&e<=a.finallyLoc&&(a=null);var i=a?a.completion:{};return i.type=t,i.arg=e,a?(this.method="next",this.next=a.finallyLoc,g):this.complete(i)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),g},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.finallyLoc===t)return this.complete(r.completion,r.afterLoc),A(r),g}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var r=this.tryEntries[e];if(r.tryLoc===t){var n=r.completion;if("throw"===n.type){var o=n.arg;A(r)}return o}}throw Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:T(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),g}},e}function l(t,e,r,n,o,a,i){try{var c=t[a](i),u=c.value}catch(t){return void r(t)}c.done?e(u):Promise.resolve(u).then(n,o)}function s(t){return function(){var e=this,r=arguments;return new Promise((function(n,o){var a=t.apply(e,r);function i(t){l(a,n,o,i,c,"next",t)}function c(t){l(a,n,o,i,c,"throw",t)}i(void 0)}))}}var f=null,p=null,h=null,v=(document.querySelector(".ticket"),document.querySelector(".ticket__value-container"),localStorage.getItem("token"));console.log(v);var y=new n.A;y.protectedRoute(),document.querySelector("#logout").addEventListener("click",(function(){return y.logout()}));var d=function(){var t=s(u().mark((function t(){var e,r;return u().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=new o.A("http://localhost:4000/players",v),t.next=3,e.get();case 3:return r=t.sent,console.log(r),t.abrupt("return",r);case 6:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}();d();var m=document.querySelector(".sales__form-text"),g=document.querySelector(".sales__data"),b=document.querySelector("#salesName"),w=document.querySelector("#salesId"),_=document.querySelector("#salesMobile"),k=(document.querySelector(".sales__form"),document.querySelector(".sales__button"),document.querySelector(".sales__list")),S=new a.A(k),x=document.querySelector(".sales__list-close"),E=function(){var t=s(u().mark((function t(){var e,r,n;return u().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return e=m.value,t.next=3,d();case 3:r=t.sent,n=r.filter((function(t){var r;return""===e||(null===(r=t.mobile)||void 0===r?void 0:r.toLowerCase().includes(e.toLowerCase()))})).map((function(t){var e=t._id,r=t.name,n=t.mobile;return'\n        <div class="sales__item">\n            <div class="sales__item-container">\n                <p class="sales__text">Nombre</p>\n                <p class="sales__value sales__value-name" data-id="'.concat(e,'" data-mobile="').concat(n,'">').concat(r,'</p>\n            </div>\n            <div class="sales__item-container">\n                <p class="sales__text">Teléfono</p>\n                <p class="sales__value">').concat(n,"</p>\n            </div>\n        </div>\n        ")})).join(""),g.innerHTML=n||"<p>No se encontraron jugadores.</p>",document.querySelectorAll(".sales__value-name").forEach((function(t){t.addEventListener("click",(function(){p=t.textContent,f=t.getAttribute("data-id"),h=t.getAttribute("data-mobile");var e=t.closest(".sales__item").querySelector(".sales__item-container:nth-child(2) .sales__value").textContent;console.log("Nombre seleccionado:",p),console.log("ID seleccionado:",f),console.log("Número de teléfono seleccionado:",e),b.value=p,w.value=f,_.value=e,S.closePopup()}))}));case 8:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}();E(),m.addEventListener("input",E),b.addEventListener("click",(function(){return S.openPopup()})),x.addEventListener("click",(function(){return S.closePopup()}));var L=document.querySelector(".sales__form"),j=document.querySelector(".sales__errorMessages"),P=function(){var t=new Date,e=t.getHours(),r=t.getMinutes(),n=t.getSeconds();r=r<10?"0"+r:r,n=n<10?"0"+n:n;var o="".concat(e=e<10?"0"+e:e,":").concat(r,":").concat(n),a=document.querySelector("#salesDate"),i=localStorage.getItem("fechaSeleccionada");i&&(a.value=i),a.addEventListener("change",(function(){a.value&&localStorage.setItem("fechaSeleccionada",a.value)})),document.querySelector("#salesTime").value=o};window.onload=function(){P()},L.addEventListener("submit",function(){var t=s(u().mark((function t(e){var r,n,o,a,i,c,l;return u().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(e.preventDefault(),j.innerHTML="",void 0,void 0,void 0,p=void 0,u=document.querySelector("#salesName").value,s=document.querySelector("#salesMobile").value,f=document.querySelector("#salesId").value,p=[],(u.length<3||u.length>30)&&p.push("El nombre debe tener entre 3 y 30 caracteres"),10===s.length&&"1234567890"!==s||p.push("El telefono debe ser de 10 digitos o no debe ser 1234567890"),""===f.length&&p.push("Este campo no puede ir vacio"),!((r=p).length>0)){t.next=6;break}return r.forEach((function(t){var e=document.createElement("div");e.textContent=t,j.appendChild(e)})),t.abrupt("return");case 6:if(P(),n={player:document.querySelector("#salesId").value.toUpperCase(),cash:document.querySelector("#cash").value||"0",cashIn:document.querySelector("#cashIn").value||"0",name:document.querySelector("#salesName").value.toUpperCase(),credit:document.querySelector("#card").value||"0",dollars:document.querySelector("#usd").value||"0",payment:document.querySelector("#payment").value||"0",date:document.querySelector("#salesDate").value.toUpperCase(),time:document.querySelector("#salesTime").value.toUpperCase()},console.log("Datos que se enviarán:",n),t.prev=9,o=localStorage.getItem("token")){t.next=14;break}return alert("No se encontró el token. Por favor, inicia sesión nuevamente."),t.abrupt("return");case 14:return t.next=16,fetch("http://localhost:4000/sales",{method:"POST",headers:{"Content-Type":"application/json","x-access-token":o},body:JSON.stringify(n)});case 16:if((a=t.sent).ok){t.next=23;break}return t.next=20,a.json();case 20:return i=t.sent,alert(i.message),t.abrupt("return");case 23:if(alert("Guardado exitosamente"),c='\n             <div class="ticket">\n                   <div class="ticket__header-container">\n                    <img src='.concat("./images/logo.png",' alt="" class="ticket__header">\n                </div>\n                  <div class="ticket__body-container">\n                      <div class="ticket__title-container">\n                          <p class="ticket__title">Fecha:</p>\n                          <p class="ticket__title">Hora:</p>\n                          <p class="ticket__title">Nombre:</p>\n                          <p class="ticket__title">Celular:</p>\n                          <p class="ticket__title">Fondo:</p>\n                          <p class="ticket__title">Efectivo:</p>\n                          <p class="ticket__title">Tarjeta:</p>\n                          <p class="ticket__title">Dolares:</p>\n                          <p class="ticket__title">Pago:</p>\n                      </div>\n                      <div class="ticket__value-container">\n                          <p class="ticket__title">').concat(n.date,'</p>\n                          <p class="ticket__title">').concat(n.time,'</p>\n                          <p class="ticket__title">').concat(n.name,'</p>\n                          <p class="ticket__title">').concat(h,'</p>\n                          <p class="ticket__title">').concat(n.cashIn,'</p>\n                          <p class="ticket__title">').concat(n.cash,'</p>\n                          <p class="ticket__title">').concat(n.credit,'</p>\n                          <p class="ticket__title">').concat(n.dollars,'</p>\n                          <p class="ticket__title">').concat(n.payment,'</p>\n                      </div>\n                  </div>\n                  <div class="ticket__text-container">\n                      <p class="ticket__text">DIAMANTE CASINO OPERADORA COMERCIALIZADORA...</p>\n                  </div>\n                  <div class="ticket__footer-container">\n                    <img src=').concat("./images/DIAMANTE.png",' alt="" class="ticket__footer">\n                </div>\n              </div>\n            '),l=window.open()){t.next=29;break}return alert("Por favor, permite las ventanas emergentes para continuar."),t.abrupt("return");case 29:l.document.write('\n                <html>\n                    <head>\n                        <title>Ticket de Venta</title>\n                           <link rel="stylesheet" href="./styles.css">\n                    </head>\n                    <style>\n                    .body {\n            \n                        width: 100%;\n                \n                    }\n                </style>\n                    <body>\n                        '.concat(c,"\n                        <script>\n                            setTimeout(() => {\n                                window.print();\n                                window.close();\n                            }, 500); // Retraso para asegurar que el DOM se renderice\n                        <\/script>\n                    </body>\n                </html>\n            ")),l.document.close(),l.onafterprint=function(){window.location.reload()},t.next=38;break;case 34:t.prev=34,t.t0=t.catch(9),console.error("Error de conexión:",t.t0),alert("Error al conectar con el servidor");case 38:case"end":return t.stop()}var u,s,f,p}),t,null,[[9,34]])})));return function(e){return t.apply(this,arguments)}}());var O=document.querySelector(".calculadora-container"),q=document.querySelector(".calculadora__display"),A=document.querySelectorAll(".calculadora__button"),I=document.querySelector("#clear-btn"),T=document.querySelector("#enter-btn"),N=new a.A(O);new i.A(q,A,I,T,N)}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,